repositories{
  maven {
    credentials {
      username getCredentialsMavenUsername()
      password getCredentialsMavenPassword()
    }
    url = "http://nexus.handpoint.ninja:8081/repository/maven-public/"
  }
  maven {
    credentials {
      username getCredentialsMavenUsername()
      password getCredentialsMavenPassword()
    }
    url = "http://nexus.handpoint.ninja:8081/repository/maven-releases/"
  }
}

dependencies {
   implementation 'com.google.code.gson:gson:2.8.5'
   implementation 'org.slf4j:slf4j-android:1.7.25'
   implementation ('com.handpoint.api:private-sdk:7.1004.6-RC.6') { changing = true }
   implementation ('com.handpoint.api:applicationprovider:7.1004.6-RC.6') { changing = true }
}

android {
  packagingOptions {
    pickFirst '**/**/*.so'
    exclude 'META-INF/**'
  }
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}


/**
 * Returns the credential username used by Maven repository
 * Set this value in your ~/.gradle/gradle.properties with MAVEN_USER key
 * @return
 */
def getCredentialsMavenUsername() {
    return hasProperty('MAVEN_USER') ? MAVEN_USER : ""
}

/**
 * Returns the credential password used by Maven repository
 * Set this value in your ~/.gradle/gradle.properties with MAVEN_PASSWORD key
 * @return
 */
def getCredentialsMavenPassword() {
    return hasProperty('MAVEN_PASSWORD') ? MAVEN_PASSWORD : ""
}

